print("문자열")

'''
문자열 만드는 방법은
1. 큰 따옴표로 양쪽 둘러싸기
2. 작은 따옴표로 둘러싸기
3. 큰 따옴표 3개 연속으로 써서 둘러싸기 = 주석
4. 작은 따옴표 3개 연속으로 써서 둘러싸기 = 주석
'''

'''
큰 따옴표와 작은 따옴표는 문자열 내에 포함 시키고 싶다면
문자열 내에 사용된 것과 다른 종류로 양쪽을 둘러싸면 된다.
또는 \ 백슬래시 = escape 문자를 사용하여 종류에 상관없이 포함 가능하다.
'''

'''
여러줄인 문자열을 포함 시키고 싶을때는 \n 개행문자를 사용하여 줄바꿈 또는 띄워쓰기를 사용하면 된다.
또는 주석을 사용할 때처럼 3개 연속 사용으로 감싸면 줄바꿈 바로 적용 가능하다.
'''

print("문자열 연산")
head = 'Python'
space = " "
middle = 'is'
tail='fun!'
print(head+space+middle+space+tail)
print()

print("문자열 곱하기 = 문자열 반복 출력")

print("="*20)
print("곱하기 테스트")
print("="*20)
print()

'''
문자열 인덱싱
파이선 인덱스는 c언어나 자바처럼 0부터 시작한다.
-붙이면 역시 뒤에서부터 시작하는 방식 동일함
'''
idx='Life is too short, You need Python.'
for a in [1,3,5,7,9,11,13,15] :
    print("1 :",idx[a])
print("2 :",end="")
for a in [1,3,5,7,9,11,13,15] :
    print(idx[a],end="")

print("")
print("문자열 슬라이싱")
s1=idx[0]+idx[1]+idx[2]+idx[3]
print("s1 : "+s1)
print()

s2=idx[0:4] # index 0 부터 4까지 가져온다.
print("s2 :",s2) # => "Life "가 아니고 "Life"인 이유는 마지막 4는 출력해주지 않기 때문이다 => 헷갈리지 않게 조심하자.

# 시작(0)이나 끝(4)을 생략하면 시작지점과 끝나는 지점이 각각 첫문자와 끝문자가 된다.
i1=idx[:18]
i2=idx[18:]
print("i1 :",i1)
print("i2 :",i2)
print(i1+" And Fast...")
print()
